package basic220531;

//=======================================================

//인터페이스명 > 우클릭 > refactor > rename
public interface BInter {

	// 1. 추상 메소드
	// 함수명만 존재, 구현되어있지 않은 함수
	// 상속 시 무조건 구현해야 함
	public int damage(int x, int y);
	// 인터페이스에서는 항상 abstract(구현x 함수) 특성을 갖고 있음
	// ㄴ> 추상클래스에서는 public abstructure int damage(); 로 써야 함
	
	// 부모 = 자식 형변환시 자식.(추상 메소드) 형태로는 사용할 수 있음
	// but 부모.(추상 메소드) 형태로는 사용할 수 없음

	public String status(String x);
	// ...............................................

	// 2. default 메소드
	// 함수 자체가 구현되어있는 함수
	// 상속 시 구현할 필요 없음
	default void defaultExample() {
	}
	
	// 부모 = 자식 형변환시
	// 자식.(추상 메소드), 부모.(추상 메소드) 형태 모두 사용할 수 있음
	// ...............................................

//	// 3. 함수 형식 확인
//	// ※ 함수 형식을 잘 봐야 함
//	// 함수 앞에 선언되는 형식에 따라 함수의 성질이 변화
//	// 1) int로 선언하면 정수를 return할 수 있음
//	public int a(int x, int y);
//
//	// 2) String으로 선언하면 문자열을 return할 수 있음
//	public String b(String x);
//
//	// 3) void로 선언하면 리턴값이 없이 실행만 가능
//	public void print();
//	// ...............................................
}

//=======================================================
